// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineAdvising.Data;

namespace OnlineAdvicing.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220205182049_Initialmigration")]
    partial class Initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineAdvising.Data.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppointmentStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FirstMessageSentAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("PsychologistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeEnded")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentStatusId");

                    b.HasIndex("PatientId");

                    b.HasIndex("PsychologistId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.DayOfWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DaysOfWeek");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.PsychologistSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PsychologistId")
                        .HasColumnType("int");

                    b.Property<double>("TotalHours")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PsychologistId");

                    b.ToTable("PsychologistSchedules");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("RateValue")
                        .HasColumnType("bit");

                    b.Property<int?>("RatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RatedId");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportedId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.ScheduleDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DayOfWeekId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DayOfWeekId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleDays");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountStatusId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.Appointment", b =>
                {
                    b.HasOne("OnlineAdvising.Data.Entities.Status", "AppointmentStatus")
                        .WithMany()
                        .HasForeignKey("AppointmentStatusId");

                    b.HasOne("OnlineAdvising.Data.Entities.User", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.HasOne("OnlineAdvising.Data.Entities.User", "Psychologist")
                        .WithMany()
                        .HasForeignKey("PsychologistId");

                    b.Navigation("AppointmentStatus");

                    b.Navigation("Patient");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.PsychologistSchedule", b =>
                {
                    b.HasOne("OnlineAdvising.Data.Entities.User", "Psychologist")
                        .WithMany()
                        .HasForeignKey("PsychologistId");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.Rate", b =>
                {
                    b.HasOne("OnlineAdvising.Data.Entities.User", "Rated")
                        .WithMany()
                        .HasForeignKey("RatedId");

                    b.Navigation("Rated");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.Report", b =>
                {
                    b.HasOne("OnlineAdvising.Data.Entities.User", "Reported")
                        .WithMany()
                        .HasForeignKey("ReportedId");

                    b.Navigation("Reported");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.ScheduleDay", b =>
                {
                    b.HasOne("OnlineAdvising.Data.Entities.DayOfWeek", "DayOfWeek")
                        .WithMany()
                        .HasForeignKey("DayOfWeekId");

                    b.HasOne("OnlineAdvising.Data.Entities.PsychologistSchedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("DayOfWeek");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("OnlineAdvising.Data.Entities.User", b =>
                {
                    b.HasOne("OnlineAdvising.Data.Entities.Status", "AccountStatus")
                        .WithMany()
                        .HasForeignKey("AccountStatusId");

                    b.HasOne("OnlineAdvising.Data.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("AccountStatus");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
